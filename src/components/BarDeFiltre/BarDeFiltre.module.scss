@use '../../styles/abstracts/variables' as vars;
@use '../../styles/abstracts/typography' as *;
@use '../../styles/abstracts/breakpoints' as *;

.filterWrapper {
    position: relative;
    transition: transform 0.3s ease;
    display: flex;
    flex-direction: row;
    width: auto;
    min-width: 300px;
    padding-top: 1.1rem;

    @media (max-width: #{map-get($breakpoints, 'lg') - 1px}) {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100vh;
        z-index: 1000;
        pointer-events: none;
    }

    &.open {
        @media (max-width: #{map-get($breakpoints, 'lg') - 1px}) {
            pointer-events: auto;
            background-color: rgba(0, 0, 0, 0.5);
        }
    }

    &.closed {
        @media (max-width: #{map-get($breakpoints, 'lg') - 1px}) {
            background-color: transparent;
            .barDeFiltreContainer {
                transform: translateX(-100%);
            }
        }
    }
}

.barDeFiltreContainer {
    display: flex;
    flex-direction: column;
    gap: 0;
    background-color: vars.$color-primary;
    width: 500px;
    min-width: 300px;
    max-width: 600px;
    overflow-y: auto;
    transition: transform 0.3s ease;
    padding-right: 1rem;
    padding-left: 1rem;
    padding-top: 0.15rem;
    padding-bottom: 1rem;
    @media (max-width: #{map-get($breakpoints, 'lg') - 1px}) {
        top: 0;
        left: 0;
        width: 350px;
        padding-top: 5rem;
    }
    
    @media (max-width: #{map-get($breakpoints, 'md') - 1px}) {
        padding-top: 5rem;
    }

    @media (max-width: #{map-get($breakpoints, 'sm') - 1px}) {
        overflow-y: hidden;
    }

    @include breakpoint('lg') {
        position: sticky;
        top: vars.$spacing-lg;
    }

    @include breakpoint('md') {
    }

    &::-webkit-scrollbar {
        width: 8px;
    }

    &::-webkit-scrollbar-track {
        background: transparent;
    }

    &::-webkit-scrollbar-thumb {
        background-color: rgba(vars.$color-secondary, 0.2);
        border-radius: 4px;

        &:hover {
            background-color: rgba(vars.$color-secondary, 0.3);
        }
    }
}

.filtreSection {
    padding: vars.$spacing-xl vars.$spacing-lg;
    border-bottom: 1px solid rgba(vars.$color-secondary, 0.1);

    &:last-child {
        border-bottom: none;
    }

    h3 {
        margin-bottom: vars.$spacing-lg;
        color: vars.$color-secondary;
        font-family: vars.$font-sans;
        font-size: 1.5rem;
    }
}

.optionsContainer {
    display: flex;
    flex-direction: column;
    gap: vars.$spacing-md;

    label {
        display: flex;
        align-items: center;
        gap: vars.$spacing-sm;
        cursor: pointer;
        font-family: vars.$font-sans;
        @include font-size('body');
        color: vars.$color-secondary;
        padding: vars.$spacing-xs vars.$spacing-sm;
        border-radius: 4px;
        transition: all 0.2s ease;

        &:hover {
            background-color: rgba(vars.$color-secondary, 0.05);
            transform: translateX(2px);
        }

        input[type="checkbox"] {
            width: 18px;
            height: 18px;
            cursor: pointer;
            appearance: none;
            background-color: vars.$color-primary;
            border: 1px solid vars.$color-secondary;
            border-radius: 0;
            position: relative;
            transition: all 0.2s ease;

            &:hover {
                border-color: darken(vars.$color-secondary, 10%);
                box-shadow: 0 0 0 2px rgba(vars.$color-secondary, 0.1);
                transform: scale(1.05);
            }

            &:checked {
                &::after {
                    content: '';
                    position: absolute;
                    top: 2px;
                    left: 2px;
                    width: 12px;
                    height: 12px;
                    background-color: vars.$color-secondary;
                }

                &:hover {
                    &::after {
                        background-color: darken(vars.$color-secondary, 10%);
                    }
                }
            }
        }
    }
}

.priceRangeContainer {
    color: vars.$color-secondary;

    .priceInputs {
        display: flex;
        align-items: center;
        gap: vars.$spacing-md;
        margin-bottom: vars.$spacing-lg;

        input {
            width: 80px;
            padding: vars.$spacing-sm;
            background-color: vars.$color-primary;
            border: 1px solid vars.$color-secondary;
            color: vars.$color-secondary;
            font-family: vars.$font-sans;
            @include font-size('body');
            border-radius: 4px;
            transition: all 0.2s ease;

            &:hover {
                border-color: darken(vars.$color-secondary, 10%);
                box-shadow: 0 0 0 2px rgba(vars.$color-secondary, 0.1);
            }

            &:focus {
                outline: none;
                border-color: darken(vars.$color-secondary, 20%);
                box-shadow: 0 0 0 3px rgba(vars.$color-secondary, 0.15);
            }
        }

        span {
            color: vars.$color-secondary;
        }
    }

    .rangeSliders {
        position: relative;
        height: 40px;

        input[type="range"] {
            position: absolute;
            width: 100%;
            pointer-events: none;
            appearance: none;
            height: 2px;
            background: vars.$color-secondary;
            outline: none;

            &::-webkit-slider-thumb {
                pointer-events: auto;
                appearance: none;
                width: 16px;
                height: 16px;
                background: vars.$color-secondary;
                cursor: pointer;
                border-radius: 50%;
                transition: all 0.2s ease;

                &:hover {
                    background: darken(vars.$color-secondary, 10%);
                    transform: scale(1.1);
                }
            }

            &:first-child {
                top: 0;
            }

            &:last-child {
                top: 0;
            }
        }
    }
}

.colorSwatch {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    display: inline-block;
}

.isOpenButton {
    display: none;
    background-color: vars.$color-primary;
    border: none;
    color: vars.$color-secondary;
    cursor: pointer;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    z-index: 1001;
    pointer-events: auto;

    @media (max-width: #{map-get($breakpoints, 'lg') - 1px}) {
        display: flex;
        position: fixed;
        top: 80px; // Ajustez cette valeur selon la hauteur de votre header
        left: 0;
        width: 100%;
        height: 50px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    &:hover {
        background-color: lighten(vars.$color-primary, 10%);
    }

    .buttonIcon {
        font-size: 1.2rem;
        transition: transform 0.3s ease;
        margin-right: vars.$spacing-sm;
    }

    &.open {
        @media (max-width: #{map-get($breakpoints, 'lg') - 1px}) {
            position: fixed;
            left: 300px;
            width: 40px;
            border-radius: 0 4px 4px 0;
            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
        }
    }
}

.buttonText {
    font-family: vars.$font-sans;
    @include font-size('body');
    font-weight: map-get($font-weights, 'medium');
    display: inline-block;

    @media (max-width: #{map-get($breakpoints, 'lg') - 1px}) {
        .open & {
            display: none;
        }
    }
}

.filterActions {
    display: flex;
    gap: 1rem;
    padding: vars.$spacing-lg;
    border-top: 1px solid rgba(vars.$color-secondary, 0.1);
}

.filterButton {
    padding: 0.75rem 1.5rem;
    border: 1px solid vars.$color-secondary;
    font-family: vars.$font-sans;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    flex: 1;

    &.applyButton {
        background-color: vars.$color-secondary;
        color: vars.$color-primary;
        text-transform: uppercase;
        font-weight: 600;
        font-size: 0.8rem;

        &:hover {
            background-color: darken(vars.$color-secondary, 13%);
        }
    }

    &.resetButton {
        background-color: transparent;
        color: vars.$color-secondary;

        &:hover {
            background-color: rgba(vars.$color-secondary, 0.1);
        }
    }
}

.titleContainer {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: vars.$spacing-sm;
    margin-bottom: 0.5rem;
    h3 {
        margin-bottom: 0;
        color: vars.$color-secondary;
        font-family: vars.$font-sans;
        font-size: 1.5rem;
    }
}